name: Deploy Hugo site to Pages

on:
  # 在推送到 main 分支时触发
  push:
    branches: ["main"]

  # 允许手动触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限以允许部署到 Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 仅允许一个并发部署，跳过正在进行的运行之间排队的运行。
# 但是，不要取消正在进行的运行，因为我们希望让这些生产部署完成。
concurrency:
  group: "pages"
  cancel-in-progress: false

# 默认为 bash
defaults:
  run:
    shell: bash

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.139.0
    steps:
      - name: 安装 Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: 检出代码
        uses: actions/checkout@v4
      - name: 调试 - 检查主题文件结构
        run: |
          echo "检查主题目录结构..."
          ls -la themes/
          echo "检查 hugo-book 主题文件..."
          find themes/hugo-book/layouts/_partials -name "*.html" | head -10
          echo "检查 html-head.html 文件..."
          ls -la themes/hugo-book/layouts/_partials/docs/html-head.html
      - name: 设置 Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: 安装 Node.js 依赖
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: 使用 Hugo 构建
        env:
          # 为了获得最大的向后兼容性，请使用 GitHub Pages 服务器设置的 Hugo 环境。
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo version
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"          
      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 